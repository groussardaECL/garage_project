<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/css" href="index.css"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="fr" lang="fr">

<head>
    <meta http-equiv="Content-Type" content="text/xml ; charset=UTF-8"/>
    <link rel='stylesheet' href='https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css' />
    <link href="https://fonts.googleapis.com/css?family=Bungee|Roboto" rel="stylesheet"/>
    <title>BE3 - XSLT</title>
</head>

<body>
<div class="container">
    <div id="holder-header">
        <div id="header" class="col-xs-12 col-md-12">
            <div class="row">
                <div class="col-xs-12 col-md-12">
                    <h1>Projet Base de données - Garage</h1>
                    <p>by OUALLI Nassim &amp; GROUSSARD Arnaud</p>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="main">
    <div class="container">
        <div class="col-xs-12 col-md-8">
            <h1>
                Notes générales sur le développement de l'application
            </h1>
            <h2>Conception de la base de données</h2>
            <p>
                Après une première lecture du sujet, nous nous sommes lancés dans l'établissement d'un modèle entité-association de l'application. Pour cela nous avons établis une liste de l'ensemble des attributs dont nous avions besoin, et les avons organisés entre entités, associations et propriétés. L'organisation des différents éléments du modèle nous a conduit à nous poser de multiples questions sur les bonnes pratiques en conception de bases de données. Nous avons senti le besoin de completer le cours par la lecture de plusieurs ouvrages :
            </p>
            <ul>
                <li>
                    Les bases de données relationnelles - André FLORY, Frédérique LAFOREST - Edition Economica
                </li>
                <li>
                    L'autre bouquin laissé à la maison
                </li>
            </ul>
            <p>
                Un des principaux problèmes que nous avions est que nous n'arrivions pas à décomposer la conception du modèle entité-association et la conception à proprement parlé de la base de données et de ses différentes tables. Ainsi, nous nous sommes attachés dans un premier temps à concevoir le modèle, en listant toutes les entités, associations, en précisant les cardinalités des entités au sein des associations. Dans un second temps, nous avons effectué la traduction de ce modèle entité-association en modèle relationnel :</p>
            <ul>
                <li>
                    Chaque type d'entité a été traduite en relation, avec les propriétés du type d'entité devenant attributs de la relation,
                </li>
                <li>
                    Si un type d'association ne possédait pas de pattes avec une cardinalité maximale de 1, alors l'association était traduite en relation,
                </li>
                <li>
                    Si un type d'association possédait une patte avec une cardinalité maximale de 1, c'était le signe d'une dépendance fonctionnelle. On a alors ajouté un attribut dans l'entité source de la dépendance fonctionnelle, cet attribut correspondant à la clé de l'autre type d'entité.
                </li>
            </ul>
            <p>
                La différence entre la tarification forfaitaire et la tarification non forfaitaire (composée des coûts combinés de la main d'œuvre  et des pièces) ont présentés quelques difficultés lors de la conception du modèle entité-relation.
            </p>
            <p>
                Concernant la tarification, nous avons décidé d'enregistrer le prix de la prestation dans la même relation que celle répertoriant les interventions, ce prix valant comme facture, et n'est pas modifiable dans le temps. Le prix est également enregistré dans la relation <i>forfaits</i>, qui sert de catalogue des forfaits disponible.
            </p>
            <img src="img/EERdiagram.png" id="EERdiagram" class="img-responsive"/>
            <p>
                Nous avons ainsi obtenu le modèle relationnel suivant :
            </p>
            <ul>
                <li>clients (<u>IDclient</u>, nom, prenom, nomCommune, IDreferent)</li>
                <li>referents (<u>Idreferent</u>, nom, prenom)</li>
                <li>techniciens (<u>IDtechnicien</u>, nom, prenom)</li>
                <li>vehicules (<u>immatriculation</u>, typeVehicule, marque, annee)</li>
                <li>interventions (<u>IDoperation</u>, typeOperation, prixForfait, prixMainOeuvre, prixPiece, kilometrage, dateArrivee, immatriculation)</li>
                <li>commentaires (<u>IDcommentaire</u>, IDreparation, IDtechnicien, commentaire, dateHeureCommentaires)</li>
                <li>forfaits (<u>typeIntervention</u>, prixForfait)</li>
                <li>repare (<u>IDtechnicien</u>, <u>IDoperation</u>)</li>
                <li>appartient (<u>IDclient</u>, <u>immatriculation</u>)</li>
            </ul>
            <p>Avec les types de données suivants :</p>
            <ul>
                <li>
                    INT(11)
                    <ul>
                        <li>IDclient</li>
                        <li>IDreferent</li>
                        <li>IDtechnicien</li>
                        <li>IDintervention</li>
                        <li>IDcommentaire</li>
                    </ul>
                </li>
                <li>
                    INT(20)
                    <ul>
                        <li>kilometrage</li>
                    </ul>
                </li>
                <li>
                    YEAR(4)
                    <ul>
                        <li>annee</li>
                    </ul>
                </li>
                <li>
                    VARCHAR(45)
                    <ul>
                        <li>nom</li>
                        <li>prenom</li>
                        <li>commune</li>
                        <li>typeIntervention</li>
                        <li>typeVehicule</li>
                        <li>marque</li>
                    </ul>
                </li>
                <li>
                    VARCHAR(15)
                    <ul>
                        <li>immatriculation</li>
                    </ul>
                </li>
                <li>
                    LONGTEXT
                    <ul>
                        <li>commentaire</li>
                    </ul>
                </li>
                <li>
                    DATE
                    <ul>
                        <li>dateArrivee</li>
                    </ul>
                </li>

                <li>
                    DATETIME
                    <ul>
                        <li>dateHeureCommentaire</li>
                    </ul>
                </li>
                <li>DOUBLE(13,2)
                    <ul>
                        <li>prixForfait</li>
                        <li>prixMainOeuvre</li>
                        <li>prixPiece</li>
                    </ul>
                </li>
            </ul>
            <p>
            Ainsi, nous avons décidé ne pas enregistrer le nombre de voitures réparées par commune et par technicien, mais de le calculer par la suite grâce à des requêtes sur les différentes tables. Cette décision nous permettait d'éviter la création d'une relation uniquement pour le comptage du nombre de clients par ville.
            </p>
            <p>
                Les 6 relations sont en forme normale de Boyce-Cobb (F.B.N.C.), nous assurant ainsi un certain niveau d'intégrité des données.
            </p>
            <h2>
                Problèmes inhérents à la conception de la base de données
            </h2>
            <p>
                Si un référent ou un technicien est également un client, cela conduira à une duplication des données avec la relation client.<br/>
                Une solution pourrait être de créer une seule base de données "personnes", puis d'attribuer des booléens pour caractériser les techniciens et les référents (au cas où ceux-ci sont également des clients du garage).
            </p>
            <p>
                La base de données et les tables ont été créées, maintenant, nous devons définir les clés étrangères entre les tables.
                La convention suivante est adoptée pour nommer les clés étrangères : FK_ForeignKeyTable_PrimaryKeyTable
            </p>
            <table class="table table-striped">
                <thead>
                <tr>
                    <th>Nom de la clé étrangère</th>
                    <th>On Update</th>
                    <th>On Delete</th>
                </tr>
                </thead>
                <tbody>
                <tr>
                    <td>FK_appartient_IDclient</td>
                    <td>Restrict</td>
                    <td>Restrict</td>
                </tr>
                <tr>
                    <td>FK_appartient_immatriculation</td>
                    <td>Cascade</td>
                    <td>Cascade</td>
                </tr>
                <tr>
                    <td>FK_clients_IDreferent</td>
                    <td>Restrict</td>
                    <td>Restrict</td>
                </tr>
                <tr>
                    <td>FK_commentaires_IDtechnicien</td>
                    <td>Restrict</td>
                    <td>Restrict</td>
                </tr>
                <tr>
                    <td>FK_commentaires_IDintervention</td>
                    <td>Restrict</td>
                    <td>Restrict</td>
                </tr>
                <tr>
                    <td>FK_interventions_immatriculation</td>
                    <td>Cascade</td>
                    <td>Cascade</td>
                </tr>
                <tr>
                    <td>FK_interventions_typeIntervention</td>
                    <td>No Action</td>
                    <td>No Action</td>
                </tr>
                <tr>
                    <td>FK_interventions_prixForfait</td>
                    <td>No Action</td>
                    <td>No Action</td>
                </tr>
                <tr>
                    <td>FK_repare_IDtechnicien</td>
                    <td>Restrict</td>
                    <td>Restrict</td>
                </tr>
                <tr>
                    <td>FK_repare_IDintervention</td>
                    <td>Restrict</td>
                    <td>Restrict</td>
                </tr>
                </tbody>
            </table>
            <p>
                La création de la clé étrangère FK_interventions_prixForfait a nécessité de créer un index sur l'attribut prixForfait dans la relation forfaits.
            </p>
            <h2>Peuplement initial de la base de données</h2>
            <p>
                Nous peuplerons la base de données au fur et à mesure de la construction de l'application
            </p>
        </div>
        <div class="col-xs-12 col-md-4">
            <div class="side-menu">
                <h1>Lorem Ipsum</h1>
            </div>
        </div>
    </div>
</div>
</body>
</html>